clc; clear; close all;
% Fusion is grayscale only

% Step 1: Load Input Images
IR = imread('manWalkIR.jpg');
VIS = rgb2gray(imread('manWalkVB.jpg'));
figure, imshow(IR); title('Original Infrared Image');

% Step 2: Preprocess Infrared Image
grayIR = rgb2gray(IR);
figure, imhist(grayIR); title('Histogram of Infrared Grayscale Image');

smoothedIR = imgaussfilt(grayIR, 2);         % Gaussian smoothing
level = graythresh(smoothedIR);              % Otsu threshold
threshold = round(level * 255);
fprintf('Computed Otsu Threshold: %d\n', threshold);

binaryMask = smoothedIR > threshold;                         % Foreground mask
binaryMask = imclose(binaryMask, strel('disk', 5));          % Fill gaps
binaryMask = bwareaopen(binaryMask, 100);                    % Remove small fragments
backgroundMask = ~binaryMask;                                % Background mask (inverse)

% Display both masks
figure, imshow(binaryMask); title('Binary Mask - Foreground');
figure, imshow(backgroundMask); title('Binary Mask - Background');
fig_1 = double(VIS).*(binaryMask);
% Multiply VIS with binary mask to isolate foreground
foregroundVIS = uint8(double(VIS) .* double(backgroundMask));

%  Multiply VIS with background mask to isolate background
% backgroundVIS = uint8(double(VIS) .* double(binaryMask));

% Display foreground (white mask region)
figure;
imshow(foregroundVIS, []);
title('Foreground from VIS (Masked by Binary Mask)');

%  Display background (inverse mask region)
% figure;
% imshow(backgroundVIS, []);
% title('Background from VIS (Masked by Inverse Mask)');
% Create masked IR image using binary mask
maskedIR = uint8(double(grayIR) .* double(binaryMask));

% Display masked IR image
figure;
imshow(maskedIR, []);
title('Masked IR (Foreground from IR using Binary Mask)');